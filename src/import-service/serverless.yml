service: import-service

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    NODE_ENV: dev
    BATCH_TOPIC_ARN: {"Ref": "BatchTopic"}
    BATCH_QUEUE_ARN: {"Ref": "BatchQueue"}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:PutObject
        - s3:GetObject
      Resource: "arn:aws:s3:::products-s3-csv/*"
    - Effect: Allow
      Action:
        - sqs:*
      Resource:
        Fn::GetAtt:
          - BatchQueue
          - Arn
    - Effect: Allow
      Action:
        - sns:*
      Resource:
        - Ref: BatchTopic

plugins:
  - serverless-plugin-typescript 
  - serverless-offline

functions:
  importProductsFile:
    handler: app/handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                filename: true
  importFileParser:
    handler: app/handler.importFileParser
    events:
      - s3:
          bucket: products-s3-csv
          event: s3:ObjectCreated:*
          existing: true
          rules:
            - prefix: uploaded/
            - suffix: .csv
  catalogBatchProcess:
    handler: app/handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - BatchQueue
              - Arn

resources:
  Resources:
    BatchQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-catalog-queue
    BatchTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-catalog-topic
    BatchSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: krezzsy@gmail.com
        Protocol: email
        TopicArn: {"Ref": "BatchTopic"}

